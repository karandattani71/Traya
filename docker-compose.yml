services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=imdiyo_airline
      - DB_SSL=false
      - JWT_SECRET=docker-development-jwt-secret-change-in-production
      - JWT_EXPIRES_IN=24h
      - PORT=3000
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    networks:
      - imdiyo-network
    restart: unless-stopped

  migration:
    build:
      context: .
      dockerfile: Dockerfile.migration
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=imdiyo_airline
      - DB_SSL=false
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - imdiyo-network
    restart: "no"

  postgres:
    image: postgres:15-alpine
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=imdiyo_airline
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - imdiyo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d imdiyo_airline"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  imdiyo-network:
    driver: bridge 